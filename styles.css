/* below sets some variables within the css code. the variables used here are to quickly set colours

color palettes can be easily found here
https://tailwindcss.com/docs/customizing-colors
*/

:root {
    --primary-color: #f1f5f9;
    --secondary-color: #94a3b8;
    --bg-color: #020617;
}


/* below sets default styling for the whole page, removing any browser margin and padding default settings and changing the box-sizing setting to border-box. transition-duration makes that nice hover effect */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
    transition-duration: 200ms;
}

/* using var() we can access the variables set in the :root selector */

body {
    background: var(--bg-color);
    color: var(--primary-color);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 72px;
    padding: 14px;
}

.darkerText {
    color: var(--secondary-color);
}

header,
main,
footer {
    max-width: 700px;
    margin: 0 auto;
    width: 100%
}

p {
    font-size: 1.05em;
}

header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 14px;
}

nav {
    color: var(--secondary-color);
    display: flex;
    align-items: center;
    gap: 32px;
}

nav a {
    cursor: pointer;
    text-decoration: none;
}

nav a:hover {
    opacity: 0.7;
}

main, section, .nameContainer {
    display: flex;
    flex-direction: column;
}

main {
    gap: 64px;
    padding-bottom: 64px;
}

section {
    gap: 48px;
}

.nameContainer {
    gap: 8px;
}

.statsContainer {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 24px;
}

/* when the profile pic is added to the html this will style it - the border-radius setting will make it into a circle, the rules targeting img will make the image space itself into the container */

.imgContainer {
    border-radius: 100%;
    max-width: 114px;
    overflow: hidden;
}

.imgContainer img {
    width: 100%;
    aspect-ratio: 1/1;  
    object-fit: cover;
}

.stats {
    display: flex;
    flex-direction: column;
    gap: 14px;
}

.stats > div {
    flex: 1;
    display: flex;
    align-items: center;
    gap: 8px;
}

.stats div i {
    font-size: 1.4em;
}

/* without the code below the icons and the descriptions are a little janky - this snaps it into a grid nicely */

.stats div div {
    display: grid;
    place-items: center;
    min-width: 40px;
}

/* line-height below spaces the lines of text out a little, leaving some breathing room */

.aboutMe {
    line-height: 1.5em;
}

/* the width and margin-right rules below make it so that the element does not stretch across the whole page, it fits the content only. without these two rules the whole width would be selected */

.outreach {
    display: flex;
    align-items: center;
    gap: 14px;
    cursor: pointer;
    width: fit-content;
    margin-right: auto;
    text-decoration: none;
}

.outreach:hover {
    opacity: 0.7;
}

.outreach i {
    transform: rotate(-45deg);
}

.projectContainer {
    display: flex;
    flex-direction: column;
    gap: 32px;
}

.headerText {
    margin-bottom: 24px;
}

.projectItem {
    display: flex;
    align-items: stretch;
    gap: 24px;
}

/* the below selects the first div of multiple divs, in this case the date and description and not the image, without needing to set a separate class for that div. the code itself moves the description away from the date, again for breathing room */

.projectItem div:first-child {
    display: flex;
    flex-direction: column;
    gap: 14px;
}

/* the below selects the last div of multiple divs, in this case the div containing the image. the aspect ratio is a standard video aspect ratio. the > symbols used are to mark direct descendents, not just anything after. without them the links given in .linkContainer display weirdly*/

.projectItem > div:last-child {
    aspect-ratio: 16/9;
    max-width: 30%;
    overflow: hidden;
    border-radius: 8px;
}

.projectItem > div:last-child img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.linkContainer {
    display: flex;
    align-items: center;
    gap: 24px;
}

/* flex-direction: row makes the icons and the text sit inline, important makes sure this rule takes precedence - without it the code was misbehaving, something to analyse in the future for better practice.

text-decoration: none removes the underline when there is a hyperlink */

.linkItem {
    display: flex;
    flex-direction: row !important;
    align-items: center;
    gap: 14px !important;
    color: var(--primary-color);
    text-decoration: none;
    cursor: pointer;
}

.linkItem:hover {
    opacity: 0.7;
}

.linkItem p {
    font-size: 0.9em;
}

/* the below @media query, along with the normal versions of these classes, optimises the width for different devices - on mobile the stats will be in a column, on a larger screen the stats will be alongside the profile pic */

@media (min-width: 640px) {
    .statsContainer {
        flex-direction: row;
    }
    .stats {
        gap: 0px;
    }
    .aboutMe {
        width: 80%;
        margin-right: auto;
    }
}